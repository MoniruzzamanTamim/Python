
#ЁЯФ╕ ржЙржжрж╛рж╣рж░ржг рзз: List Spread тЖТ * ржмрзНржпржмрж╣рж╛рж░ ржжрзБржЯрж┐ рж▓рж┐рж╖рзНржЯ ржПржХрж╕рж╛ржерзЗ ржпрзБржХрзНржд ржХрж░рж╛
list1 = [1, 2, 3]
list2 = [*list1, 4, 5]

print("Add Two List:",list2) #тЮбя╕П Output: [1, 2, 3, 4, 5]

#ЁЯФ╕ ржЙржжрж╛рж╣рж░ржг 2: Dictionary Unpacking тЖТ ** ** ржмрзНржпржмрж╣рж╛рж░ ржжрзБржЯрж┐ ржбрж┐ржХрзНрж╕ржХрзНржХрзЗ  ржПржХрж╕рж╛ржерзЗ ржпрзБржХрзНржд ржХрж░рж╛
dict1 = {"a": 1}
dict2 = {"b": 2}
merged = {**dict1, **dict2}

print("Adjuct Two Disct:",merged)   #тЮбя╕П Output: {'a': 1, 'b': 2}

#ЁЯФ╕ ржЙржжрж╛рж╣рж░ржг рзй: Function Parameter тЖТ *args ржПржмржВ **kwargs ржмрзНржпрж╛ржмрж╣рж╛рж░ ржХрж░рзЗ ржлрж╛ржВрж╢ржирзЗрж░ ржорж╛ржЭрзЗ рж▓рж┐рж╖рзНржЯ ржмрж╛ ржЯрзБржкрж▓ ржПржмржВ ржбрж┐ржХрж╢ржирж╛рж░рзА ржкрж╛рж╕ ржХрж░рж╛ ржЖрж░рзНржЧрзБржорзЗржирзНржЯ рж╣рж┐рж╕рзЗржмрзЗ ред 

def introduce(name, age, country):
    print(f"Receive List & Dict Argument Using (*args & **kwargs):  {name} is {age} years old from {country}.")

info_list = ["Tamim", 25, "Bangladesh"]
info_dict = {"name": "Tamim", "age": 25, "country": "Bangladesh"}

introduce(*info_list)
introduce(**info_dict)


#ЁЯФ╕ ржЙржжрж╛рж╣рж░ржг рзк: Function Parameter тЖТ *args ржмрзНржпрж╛ржмрж╣рж╛рж░ ржХрж░рзЗ ржпрзЗ ржХрзЛржи ржнрзНржпрж╛рж▓рзБ ржХрзЗ рж▓рж┐рж╖рзНржЯ ржмрж╛ ржЯрзБржкрж▓  ржП ржХржиржнрж╛рж░рзНржЯ ржХрж░рзЗ  ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ рж╣рж┐рж╕рзЗржмрзЗ рж░рж┐рж╕рж┐ржн ржХрж░рзЗред, 
def employ_name(*name):
    n = name
    print(f"Convert Any Type of Argument Value as a Tuple OR LIST:  {n}")
    # for i in n:
    #     print(i)

employ_name("Tamim", "Moniruzzaman")

def add(*numbers):
    return sum(numbers)

print(add(1, 2, 3,8,9))  # Output: 6

#ЁЯФ╕ ржЙржжрж╛рж╣рж░ржг рзл: Function Parameter тЖТ *kwargs ржмрзНржпрж╛ржмрж╣рж╛рж░ ржХрж░рзЗ ржпрзЗ ржХрзЛржи ржнрзНржпрж╛рж▓рзБ ржХрзЗ ржбрж┐рж╕рзНржХрж╢ржирзНрж░рзА рждрзЗ ржХржиржнрж╛рж░рзНржЯ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ рж╣рж┐рж╕рзЗржмрзЗ  рж░рж┐рж╕рж┐ржк ржХрж░рж╛ ,  tar 
def employ_name(**name):
    n = name
    print(f"Convert Any Type of Argument Value as a Dick:  {n}")
# Correct way to call the function
employ_name(first_name="Moniruzzaman", last_name="Islam")
# Or even
employ_name(Name="Moniruzzaman")


