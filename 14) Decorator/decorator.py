#Basic Decorator

def decorator(main_func): #Create Decorator and receive Main Function

    def inner_decorator():
        #PreAction 
        print("PreAction:  Main function kaj korar age ki korte chai seta")
        main_func()  #Call Main Function 
        #PostAction
        print("PostAction:  Main function kaj korar por  ki korte chai seta")
    
    return inner_decorator 

# #‡¶°‡ßá‡¶ï‡ßã‡¶∞‡ßá‡¶ü‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ (Without @ symbol):.....................................................
# #First Create  Main F unction
# def main_func():
#     print("Main Function: Working Main Funtion....")
# #Second Use Decorator
# use_decorator = decorator(main_func)
# print(use_decorator())

#‚ú® ‡¶°‡ßá‡¶ï‡ßã‡¶∞‡ßá‡¶ü‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ (With @ symbol):...............................................................
@decorator
def main_func():
    print("Main Function: Working Main Funtion....")

print(main_func())





#Practise Decorator ....................................... Create a Project 
"""‚úÖ ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶Ü‡¶á‡¶°‡¶ø‡ßü‡¶æ: Secure Function Access System
‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨ ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏‡ßá‡¶∏ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá‡•§
‡¶è‡¶á ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶§‡ßç‡¶§‡¶æ (security) ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶°‡ßá‡¶ï‡ßã‡¶∞‡ßá‡¶ü‡¶∞ ‡¶¶‡¶ø‡ßü‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨‡•§
üéØ ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶∏‡¶Æ‡ßÇ‡¶π:
‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶≤‡ßá, ‡¶°‡ßá‡¶ï‡ßã‡¶∞‡ßá‡¶ü‡¶∞ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶¶‡¶ø‡ßü‡ßá‡¶õ‡ßá ‡¶ï‡¶ø ‡¶®‡¶æ‡•§
‡¶Ø‡¶¶‡¶ø ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶†‡¶ø‡¶ï ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ö‡¶≤‡¶¨‡ßá‡•§
‡¶≠‡ßÅ‡¶≤ ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶¶‡¶ø‡¶≤‡ßá ‚Äì "Access Denied" ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡•§"""

print("Project 1 ........................................................")
from functools import wraps

def use_pass(main_func):
    @wraps(main_func)
    def innerdecorate(*args, **kwargs):
        password = input("Type Your Password: ")
        if  password == "tamim12":
            print("Access Granted....")
            return main_func(*args, **kwargs)
        else:
            return "Access Denide................."
    return innerdecorate


#Use Decorate  
@use_pass
def user_info(name,age,balance):
    print(f"User Name is {name}, User Gae is {age} and User Blance Available {balance}")

#Use Decorate  
@use_pass
def transfer_money():
    print("üí∏ Transferring money...")


#Public function Not Use Decorator 
def hello():
    print("Say Hello....")


def main():
    print("\n")
    while True:
        print("1) Check user Info \n2)Transfer Money \n3)Sey Hello \n4)Exit")
        option = int(input("Choice an Option: "))
        if option == 1:
            user_info("Tamim", 25, 25804)
        elif option ==2:
            transfer_money()
        elif option ==3:
            hello()
        elif option == 4:
            break
        else:
            print("Invalid option")


main()

print("\n")
print("Project-2........................................................................")
"""‚úÖ ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶®‡¶æ‡¶Æ: custom_logger
üéØ ‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Ø:
‡¶è‡¶ï‡¶ü‡¶ø ‡¶°‡ßá‡¶ï‡ßã‡¶∞‡ßá‡¶ü‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨‡ßã ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ
‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡¶æ‡¶Æ‡¶ø‡¶ü‡¶æ‡¶∞ *args, **kwargs
‡¶ü‡¶æ‡¶á‡¶Æ
‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ
üëâ ‡¶∏‡¶¨ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡¶ü‡¶ø .txt ‡¶´‡¶æ‡¶á‡¶≤‡ßá ‡¶≤‡¶ó ‡¶ï‡¶∞‡¶¨‡ßá‡•§
"""

import datetime
from functools import wraps

def logmessage(main_func):
    @wraps(main_func)
    def innerDecorator(*args,**kwargs):
        time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S") #Date & Time Genaret
        name= main_func.__name__  #collect Main_function Named
        result = main_func(*args,**kwargs)   #Main Function Assign
        
        log = (
           f" [{time}] Function '{name}' called.\n" 
                f"  Arguments: args={args}, kwargs={kwargs}\n"
                f"  Returned: {result}\n"
                "-----------------------------\n"
        ) 
        log_file_path = "14) Decorator\\log.txt"
        with open(log_file_path, "a") as file:
            file.write(log)
            
        return result
    return innerDecorator



@logmessage
def  info(name,age):
    print(f"hello {name}, age {age} , Your Login Information are Store log.txt File SuccessFully")
    return f"hello {name}, age {age}"

info("TAMIM",age =254)